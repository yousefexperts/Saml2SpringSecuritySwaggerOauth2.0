<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <aop:aspectj-autoproxy/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="dbType" value="mysql"/>
        
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxActive" value="${druid.maxActive}"/>
       
        <property name="maxWait" value="${druid.maxWait}"/>
        
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
        
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${druid.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>
        
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${druid.maxPoolPreparedStatementPerConnectionSize}"/>
        
        <property name="filters" value="${druid.filters}"/>
    </bean>
   
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="storageLogin" class="com.cheyipai.cas.jdbc.StorageLogin" p:jdbcTemplate-ref="jdbcTemplate"/>


    <bean id="timingAspect" class="org.perf4j.log4j.aop.TimingAspect"/>

    <bean id="messageSource" class="org.jasig.cas.web.view.CasReloadableMessageBundle"
          p:basenames-ref="basenames" p:fallbackToSystemLocale="false" p:defaultEncoding="UTF-8"
          p:cacheSeconds="180" p:useCodeAsDefaultMessage="true"/>

    <util:list id="basenames">
        <value>classpath:custom_messages</value>
        <value>classpath:messages</value>
    </util:list>

    <bean id="servicesManager" class="org.jasig.cas.services.DefaultServicesManagerImpl"
          c:serviceRegistryDao-ref="serviceRegistryDao"/>

    <bean id="serviceRegistryReloaderJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
          p:targetObject-ref="servicesManager"
          p:targetMethod="reload"/>

    <bean id="periodicServiceRegistryReloaderTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean"
          p:jobDetail-ref="serviceRegistryReloaderJobDetail"
          p:startDelay="${service.registry.quartz.reloader.startDelay:120000}"
          p:repeatInterval="${service.registry.quartz.reloader.repeatInterval:120000}"/>

    <bean id="httpClient" class="org.jasig.cas.util.SimpleHttpClient"
          p:readTimeout="5000"
          p:connectionTimeout="5000"/>

    <bean id="noRedirectHttpClient" class="org.jasig.cas.util.SimpleHttpClient" parent="httpClient"
          p:followRedirects="false"/>

    <bean id="persistentIdGenerator"
          class="org.jasig.cas.authentication.principal.ShibbolethCompatiblePersistentIdGenerator"
          p:salt="casrocks"/>

    <bean id="logoutManager" class="org.jasig.cas.logout.LogoutManagerImpl"
          c:servicesManager-ref="servicesManager"
          c:httpClient-ref="noRedirectHttpClient"
          c:logoutMessageBuilder-ref="logoutBuilder"
          p:disableSingleSignOut="${slo.callbacks.disabled:false}"/>

    <bean id="logoutBuilder" class="org.jasig.cas.logout.SamlCompliantLogoutMessageCreator"/>

    <!-- CentralAuthenticationService -->
    <bean id="centralAuthenticationService" class="org.jasig.cas.CentralAuthenticationServiceImpl">
        <constructor-arg index="0" ref="ticketRegistry"/>
        <constructor-arg index="1">
            <null/>
        </constructor-arg>
        <constructor-arg index="2" ref="authenticationManager"/>
        <constructor-arg index="3" ref="ticketGrantingTicketUniqueIdGenerator"/>
        <constructor-arg index="4" ref="uniqueIdGeneratorsMap"/>
        <constructor-arg index="5" ref="grantingTicketExpirationPolicy"/>
        <constructor-arg index="6" ref="serviceTicketExpirationPolicy"/>
        <constructor-arg index="7" ref="servicesManager"/>
        <constructor-arg index="8" ref="logoutManager"/>
        <property name="persistentIdGenerator" ref="persistentIdGenerator"/>
    </bean>

    <bean id="proxy10Handler" class="org.jasig.cas.ticket.proxy.support.Cas10ProxyHandler"/>

    <bean id="proxy20Handler" class="org.jasig.cas.ticket.proxy.support.Cas20ProxyHandler"
          p:httpClient-ref="httpClient"
          p:uniqueTicketIdGenerator-ref="proxy20TicketUniqueIdGenerator"/>

    <!-- ADVISORS -->
    <bean id="advisorAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="validationAnnotationBeanPostProcessor" class="org.jasig.cas.util.CustomBeanValidationPostProcessor"
          p:afterInitialization="true"/>

    <!-- The scheduler bean wires up any triggers that define scheduled tasks -->
    <bean id="scheduler" class="org.jasig.cas.util.AutowiringSchedulerFactoryBean"/>
</beans>